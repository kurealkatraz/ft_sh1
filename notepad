structures :
	t_env
		->name
		->value
		->next
	t_pth
		->path
		->next

builtins :
	exit
	env
	setenv
	unsetenv
	cd

main(argc, argv, envp)
	env = ft_env(envp)
	ft_prompt(env)

ft_env(char **envp)
	while (envp[X] != NULL)
		envp[X++] = env->name + '=' + env->value + '\0'
	return env

ft_prompt(t_env *env)
	while 42
		write(prompt)
		cmd = ft_read(stdin)
		argv = ft_get_argv(cmd)
		if ft_is_builtin(argv[0], env) == TRUE
			env = ft_builtin(argv, env)
		else
			if (path = ft_find_bin(argv[0], env)) == NULL
				write(cmd_not_found)
			else
				ft_new_process(path, argv, env)
	end

ft_read(int fd)
	while ((r = gnl(fd) )!= 1)
		if r == 1
			return r
		else if r == 0
			interupt
		else
			error
	end

ft_get_argv(char *cmd)
	cmd = argv[0] + ' ' +  argv[1] + ' ' + argv[x]
	return argv

ft_is_builtin(char *name, t_env *env)
	if (name in builtins)
		return TRUE
	else
		return FALSE

ft_builtin(argv, env)
	if (argv[0] == exit)
		exit
	else if (argv[0] == cd)
		return (ft_builtin_cd(argv, env))
	else if (argv[0] == unsetenv)
		return (ft_builtin_unsetenv(argv, env))
	else if (argv[0] == setenv)
		return (ft_builtin_setenv(argv, env))
	else
		return (ft_builtin_env(argv, env))

ft_find_bin(char *bin, t_env *env)
	path = ft_path(env)
	while (path[x] != NULL)
		opendir path[x]
		if (strcmp(bin, dire->d_name) == 0)
			return path[x]
		x++
	return NULL

ft_path(t_env *env)
	while (env->name != PATH)
		env = env->next
	env->value = path[0] + ':' + path[1] + ':' + path[X]
	return path

ft_new_process(char *path, char **argv, t_env *env)
	envp = ft_get_envp(env)
	fork
	fils
		execve(path, argv, envp)
		kill
	pere
		wait

